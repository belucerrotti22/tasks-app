{"version":3,"sources":["TasksContext/TasksContext.js","TasksContext/useLocalStorage.js","components/TasksCounter.js","components/TaskSearch.js","components/CreateTaskButton.js","components/TaskItem.js","components/TasksList.js","components/MainContainer.js","components/LoadingItem.js","components/ErrorItem.js","components/NewTask.js","Modal.js","AppUI.js","App.js","index.js"],"names":["TasksContext","React","createContext","TasksProvider","_ref","children","item","tasks","saveChanges","loading","error","itemName","valorInicial","setItem","useState","setLoading","setError","parsedItem","useRef","useEffect","setTimeout","localStorageItem","localStorage","getItem","current","JSON","parse","stringify","newTasks","useLocalStorage","searchValue","setSearchValue","openModal","setOpenModal","newTaskTitle","setNewTaskTitle","completedTasks","filter","tarea","completed","length","totalTasks","createElement","Provider","value","completeTask","text","map","deleteTask","addNewTask","newTask","TasksCounter","useContext","TaskSearch","onChange","event","target","className","placeholder","CreateTaskButton","onClick","TaskItem","concat","toLowerCase","includes","FaCheck","FaXmark","TasksList","props","MainContainer","LoadingItem","ErrorItem","MdError","NewTask","Modal","ReactDOM","createPortal","document","getElementById","AppUI","Fragment","task","key","App","createRoot","render"],"mappings":"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","file":"static/js/main.71251346.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { useLocalStorage } from \"./useLocalStorage\"; \r\n\r\n\r\nconst TasksContext = React.createContext();\r\n\r\nfunction TasksProvider({children}){\r\n\r\n    const {item: tasks, \r\n        saveChanges,\r\n        loading,\r\n        error} = useLocalStorage(\"TAREAS\", []);\r\n    const [searchValue, setSearchValue] = React.useState('');\r\n    const [openModal, setOpenModal] = React.useState(false);\r\n    const [newTaskTitle, setNewTaskTitle] = React.useState('');\r\n\r\n    let completedTasks = tasks.filter(tarea => tarea.completed).length;\r\n    let totalTasks = tasks.length;\r\n\r\n    const deleteTask = (text) => {\r\n        let newTasks = tasks.filter(tarea => tarea.text !== text);\r\n        saveChanges(newTasks);\r\n    };\r\n\r\n    const completeTask = (text, completed) => {\r\n        let newTasks = tasks.map(tarea => {\r\n        if (tarea.text === text) {\r\n            return {text: text, completed: !completed };\r\n        }\r\n        return tarea;\r\n        })\r\n        saveChanges(newTasks);\r\n    };\r\n\r\n    const addNewTask = () => {\r\n        let newTask = { text: newTaskTitle, completed: false };\r\n        let newTasks = [...tasks, newTask];\r\n        setNewTaskTitle('');\r\n        saveChanges(newTasks);\r\n        setOpenModal(false);\r\n    }\r\n\r\n    return (<TasksContext.Provider value={{completedTasks, \r\n                                            totalTasks, \r\n                                            searchValue, \r\n                                            setSearchValue, \r\n                                            tasks, \r\n                                            completeTask, \r\n                                            deleteTask, \r\n                                            loading, \r\n                                            error, \r\n                                            openModal,\r\n                                            setOpenModal,\r\n                                            addNewTask,\r\n                                            newTaskTitle,\r\n                                            setNewTaskTitle}}>\r\n                {children}\r\n            </TasksContext.Provider>)\r\n}\r\n\r\nexport { TasksContext, TasksProvider }","import React from \"react\";\r\n\r\nfunction useLocalStorage(itemName, valorInicial){\r\n\r\n    const [item, setItem] = React.useState(valorInicial);\r\n    const [loading, setLoading] = React.useState(true);\r\n    const [error, setError] = React.useState(false);\r\n    const parsedItem = React.useRef(null);\r\n  \r\n    React.useEffect( () => {\r\n        setTimeout( () => {\r\n            try {\r\n                const localStorageItem = localStorage.getItem(itemName);\r\n\r\n                if(localStorageItem){\r\n                    parsedItem.current = JSON.parse(localStorageItem);\r\n                    setItem(parsedItem.current);\r\n                }else{\r\n                    parsedItem.current = valorInicial;\r\n                    localStorage.setItem(itemName, JSON.stringify(parsedItem.current));  \r\n                }\r\n                setLoading(false);\r\n            }catch(error){\r\n                setLoading(false);\r\n                setError(true);\r\n            }\r\n        }, 2000 );\r\n    }, [itemName, valorInicial]);\r\n  \r\n    const saveChanges = (newTasks) => {\r\n      setItem(newTasks);\r\n      localStorage.setItem(itemName, JSON.stringify(newTasks));\r\n    }\r\n  \r\n    return {\r\n        item,\r\n        saveChanges,\r\n        loading,\r\n        error,\r\n    };\r\n}\r\n\r\nexport { useLocalStorage }","import React from 'react'\r\nimport '../css/TasksCounter.css'\r\nimport { TasksContext } from '../TasksContext/TasksContext';\r\n\r\nfunction TasksCounter () {\r\n\r\n  const {completedTasks, totalTasks} = React.useContext(TasksContext);\r\n\r\n  if(totalTasks === 0 ){\r\n    return (\r\n      <h1>\r\n        ¡Agrega nuevas tareas!\r\n      </h1>\r\n    )\r\n  }else if (completedTasks === totalTasks){\r\n    return (\r\n      <h1>\r\n        ¡Haz completado todas tus tareas!\r\n      </h1>\r\n    )\r\n  }else {\r\n    return(\r\n      <h1>\r\n        Hiciste {completedTasks} de {totalTasks} tareas\r\n      </h1>\r\n    )\r\n  }\r\n}\r\n\r\nexport {TasksCounter}\r\n\r\n","import React from 'react';\r\nimport '../css/TaskSearch.css';\r\nimport { TasksContext } from '../TasksContext/TasksContext';\r\n\r\nfunction TaskSearch () {\r\n\r\n  const {searchValue, setSearchValue} = React.useContext(TasksContext);\r\n\r\n  return (\r\n    <input \r\n    value={searchValue}\r\n    onChange={(event) => setSearchValue(event.target.value)} \r\n    className='searchBar' \r\n    placeholder=\"Buscar tarea...\">\r\n\r\n    </input>\r\n  )\r\n}\r\n\r\nexport { TaskSearch };","import React from 'react'\r\nimport '../css/CreateTaskButton.css'\r\nimport { TasksContext } from '../TasksContext/TasksContext';\r\n\r\n\r\nfunction CreateTaskButton () {\r\n  const {setOpenModal} = React.useContext(TasksContext);\r\n    return (\r\n      <button onClick={() => setOpenModal(true)} className='button-add'>Nueva tarea</button>\r\n    )\r\n}\r\n\r\nexport {CreateTaskButton}","import React from 'react'\r\nimport '../css/TaskItem.css'\r\nimport { FaCheck } from \"react-icons/fa\";\r\nimport { FaXmark } from \"react-icons/fa6\";\r\n\r\n\r\nfunction TaskItem ({text, completed, searchValue, completeTask, deleteTask}) {\r\n\r\n  return(\r\n    <div className={`container-tarea ${completed && \"completed-container\"} ${!text.toLowerCase().includes(searchValue.toLowerCase()) && \"no-mostrar\"}`}>\r\n      <FaCheck className={`check ${completed && \"checked\"}`} onClick={completeTask}></FaCheck>\r\n      <p className={`${completed && \"completed-tarea\"}`}>{text}</p>\r\n      <button>\r\n      <FaXmark onClick={deleteTask} className='cancel-tarea'></FaXmark>\r\n      </button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport {TaskItem}\r\n","import React from 'react'\r\nimport '../css/TasksList.css'\r\n\r\nfunction TasksList (props) {\r\n    return (\r\n      <div className='lista-tareas'>\r\n        {props.children}\r\n      </div>\r\n    )\r\n}\r\n\r\nexport {TasksList}","import React from 'react'\r\nimport '../css/MainContainer.css'\r\n\r\nfunction MainContainer (props) {\r\n    return (\r\n      <div className='main-container'>\r\n        {props.children}\r\n      </div>\r\n    )\r\n}\r\n\r\nexport {MainContainer}","import React from 'react';\r\nimport \"../css/LoadingItem.css\";\r\n\r\nfunction LoadingItem () {\r\n  return(\r\n    <div className='loading-container'>\r\n        <p>Cargando tus tareas...</p>  \r\n    </div>    \r\n  )\r\n}\r\n\r\nexport {LoadingItem}\r\n","import React from 'react';\r\nimport { MdError } from \"react-icons/md\";\r\nimport \"../css/ErrorItem.css\"\r\n\r\nfunction ErrorItem () {\r\n  return(\r\n    <div className='error-container'>\r\n        <MdError></MdError>\r\n        <p>ERROR :/</p>  \r\n    </div>    \r\n  )\r\n}\r\n\r\nexport {ErrorItem}\r\n","import React from \"react\";\r\nimport '../css/NewTask.css'\r\nimport { TasksContext } from \"../TasksContext/TasksContext\";\r\nimport { FaXmark } from \"react-icons/fa6\";\r\n\r\n\r\nfunction NewTask () {\r\n    const {setOpenModal, addNewTask, newTaskTitle, setNewTaskTitle} = React.useContext(TasksContext);\r\n    return (\r\n        <div className=\"blur\">\r\n            <div className=\"modal-container\">\r\n                <FaXmark onClick={() => setOpenModal(false)} className='cancel-new-task'></FaXmark>\r\n                <input \r\n                value={newTaskTitle}\r\n                onChange={(event) => setNewTaskTitle(event.target.value)}  \r\n                placeholder=\"Nombre de la nueva tarea\" \r\n                className=\"new-task-name\"></input>\r\n                <button \r\n                onClick={addNewTask}>Guardar</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport { NewTask }","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { NewTask } from \"./components/NewTask\";\r\n\r\nfunction Modal () {\r\n    return ReactDOM.createPortal(\r\n        <NewTask/>, document.getElementById('modal')\r\n    )\r\n}\r\n\r\nexport { Modal }","import React from 'react';\r\nimport { TasksCounter } from './components/TasksCounter';\r\nimport { TaskSearch } from './components/TaskSearch';\r\nimport { CreateTaskButton } from './components/CreateTaskButton';\r\nimport { TaskItem } from './components/TaskItem';\r\nimport { TasksList } from './components/TasksList';\r\nimport { MainContainer } from './components/MainContainer';\r\nimport { LoadingItem } from \"./components/LoadingItem\";\r\nimport { ErrorItem } from \"./components/ErrorItem\";\r\nimport { TasksContext } from './TasksContext/TasksContext';\r\nimport { Modal } from './Modal';\r\n\r\nfunction AppUI () {\r\n\r\n  const {loading, \r\n        error, \r\n        openModal,\r\n        tasks, \r\n        searchValue, \r\n        completeTask, \r\n        deleteTask} = React.useContext(TasksContext);\r\n\r\n  return(\r\n    <React.Fragment>\r\n\r\n    <MainContainer>\r\n\r\n      <TasksCounter/>\r\n\r\n      <TaskSearch/>\r\n\r\n      <TasksList>\r\n        {loading && <LoadingItem/>}\r\n        {error && <ErrorItem/>}\r\n        {tasks.map(task => (\r\n          <TaskItem \r\n          key={task.text} \r\n          text={task.text} \r\n          completed={task.completed} \r\n          searchValue={searchValue}\r\n          completeTask = {() => completeTask(task.text, task.completed)}\r\n          deleteTask = {() => deleteTask(task.text)} />))} \r\n      </TasksList>\r\n\r\n      <CreateTaskButton/>\r\n\r\n      {openModal && <Modal/>}\r\n\r\n    </MainContainer>\r\n\r\n  </React.Fragment>\r\n  );\r\n}\r\n\r\nexport { AppUI };","import React from 'react'\r\nimport { AppUI } from './AppUI';\r\nimport { TasksProvider } from './TasksContext/TasksContext';\r\n\r\nfunction App() {\r\n  return (\r\n    <TasksProvider>\r\n        <AppUI/>  \r\n    </TasksProvider>\r\n  );\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport './css/index.css';\r\nimport App from './App';\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\nroot.render(<App />);\r\n"],"sourceRoot":""}